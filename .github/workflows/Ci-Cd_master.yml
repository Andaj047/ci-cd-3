name: Build and Deploy

on:
  push:
    branches:    
      - Dev
# on:
#     workflow_dispatch: {}

env:
  applicationfolder: /
  AWS_REGION: us-east-1
  AWS_S3_BUCKET: git-action-ci-cd-build

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-18.04
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository
    
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build -c debug --no-restore

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

#       - name: chmod
#         run: chmod -R +x ./.github

      - name: Upload Artifact to s3
        working-directory: ${{ env.applicationfolder }}target
        run: aws s3 cp *.war s3://${{ env.AWS_S3_BUCKET }}/

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        run: zip -qq -r helloworld.zip bin/release/net3.1
            
      - name: Upload to S3
        run: aws s3 cp ${{ github.run_id }}.zip s3://${{ env.AWS_S3_BUCKET }}/${{ github.run_id }}.zip

  deploy:
    needs: build
    runs-on: ubuntu-18.04
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
    - run: | 
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        aws lambda update-function-code --function-name git-test-function --s3-bucket ${{ env.AWS_S3_BUCKET }} --s3-key ${{ github.run_id }}.zip

    - name: Sleep for 5 seconds
      run: sleep 5s
      shell: bash

    - name: Release lambda function version
      run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        aws lambda publish-version --function-name git-test-function --description ${{ github.run_id }}

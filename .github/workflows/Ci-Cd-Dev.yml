name: Build and Deploy in dev

on:
  push:
    branches:    
      - Dev
      
env:
  applicationfolder: 'src/blank-csharp'
  AWS_REGION: us-east-1
  AWS_S3_BUCKET: git-action-ci-cd-build

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-18.04
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository
    
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      
      - name: Dot net dependencies and AWS CLI
        working-directory: './src/blank-csharp'
        run: |
          dotnet restore
          dotnet tool install -g Amazon.Lambda.Tools
      
      - name: Build
        working-directory: './src/blank-csharp'
        run: dotnet build -c debug --no-restore

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.AWS_REGION}}
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}

#       - name: chmod
#         run: chmod -R +x ./.github

      - name: Install zip
        uses: montudor/action-zip@v1
        
      - name: Create Zip File
        run: zip -r blank-csharp.zip ./src

      - name: s3 bucket list
        run: aws s3api list-buckets --query "Buckets[].Name"
        
      - name: Upload to S3
        run: aws s3 cp *.zip s3://${{ env.AWS_S3_BUCKET }}/
        
  deploy:
    needs: build
    runs-on: ubuntu-18.04
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:     
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-region: ${{env.AWS_REGION}}
#           role-to-assume: arn:aws:iam::967774776559:role/github-action-access-role
#           role-session-name: development
#           aws-s3-bucket: ${{ env.AWS_S3_BUCKET }}
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
    - run: aws lambda update-function-code --function-name git-test-function --s3-bucket ${{ env.AWS_S3_BUCKET }} --s3-key blank-csharp.zip

    - name: Sleep for 5 seconds
      run: sleep 5s
      shell: bash

    - name: Release lambda function version
      run: aws lambda publish-version --function-name git-test-function --description ${{ github.run_id }}
